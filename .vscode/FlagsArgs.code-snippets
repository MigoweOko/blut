{
	// Place your Blut workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Flags and args": {
		"scope": "typescript",
		"prefix": "flagsargs",
		"body": [
			"let str: string = args.join(' ');\n",
			"//Arguments, +",
			"let cmdArgs: { ${1:arg}: string } = { ${1:arg}: undefined };",
			"let regexArgs = /+w+sS+/g;",
			"if (regexArgs.test(str)) {",
			"\tlet regexed: RegExpMatchArray = str.match(regexArgs);",
			"\tstr = str.replace(regexArgs, '');",
			"\tregexed.forEach((v) => {",
			"\tcmdArgs[v.substring(1, v.indexOf(' '))] = v.substring(v.indexOf(' ') + 1)",
			"\t});",
			"}",
			"//Flags, -",
			"let cmdFlags: { ${2:flag}: boolean } = { ${2:flag}: false };",
			"let regexFlags: RegExp = /-w+/g",
			"if (regexFlags.test(str)) {",
			"\tlet regexed: RegExpMatchArray = str.match(regexFlags);",
			"\tstr = str.replace(regexFlags, '');",
			"\tregexed.forEach((v) => {",
			"\tcmdFlags[v.substring(1)] = true;",
			"\t});",
			"}",
			"${0}"
		],
		"description": "haha!"
	}
}